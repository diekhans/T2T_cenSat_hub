This file contains notes on looking for genes inside of cenSat1 centromere regions.

Working directory is:
   /nanopore/markd/t2t-centromere/T2T_cenSat/genefind/cenSat1

all paths are relative to this unless other noted.

* 2020-04-06 encodeRnaSeq set 1 download

** from encode, select
  - polyA plus RNA-Seq
  - released
  - Human
  - testis, brain
  - fastq files
  - paired-end
  resulting in 13 experiments
** download
  cd genefind/cenSat1/encodeRnaSeq1/data
  parallel curl -O -L < ~/tmp/files.txt >&log&
  mv *type=Experiment* metadata.tsv

* 2020-04-12 encodeRnaSeq set1 alignments and intron calls
Align encode set to new set of contigs.  Keep lots of hits (2049) and filter later

cd genefind/cenSat1/encodeRnaSeq1
twoBitToFa ../../../hub/cenSat1/cenSat1.2bit tigs/cenSat1.fa
twoBitInfo ../../../hub/cenSat1/cenSat1.2bit tigs/cenSat1.sizes
mkdir tigs/star
nice STAR --runMode genomeGenerate --runThreadN 32 --genomeFastaFiles tigs/cenSat1.fa --genomeDir tigs/star --outFileNamePrefix tigs/star/out
samtools faidx tigs/cenSat1.fa
# each node has 32 cores and 256gb of memory, use 4 cores per job, 64gb mem
../../../../T2T_cenSat_hub/bin/genEncodeAlnJobs 4 64 data/metadata.tsv data tigs/star bams jobs.para

para create -ram=64g -batch=b1  jobs.para 
para push -ram=64g -batch=b1
Average job time:               16336s     272.27m     4.54h    0.19d
Longest finished job:           33036s     550.60m     9.18h    0.38d
# note: looks like 16gb might do

# combined
(nice samtools cat bams/ENCFF*.bam | nice samtools sort -O BAM --threads 32 >bams/encodeRnaSeq1.bam)>&cat.log&

# generate intron calls
#LOOP
../../../../T2T_cenSat_hub/bin/callIntronsJob tigs/cenSat1 $(path1) introns/$(root1).introns.bigBed {check out exists introns/$(root1).juncs.bigBed}
#ENDLOOP

gensub2 <(find bams -name '*.bam') <(echo 1) introns.tmpl introns.jobs
for f in bams/*.bam ; do (samtools index $f &); done

*** BUGS:
tig00001118:34,241,781-34,242,398 - non-canonical

* 2020-04-17  proseq
 sync /public/groups/nanopore/karen/chm13/cenSat_WG/transcription/SKlein_PROSeq_forCollab_05Dec2019-145360224
 to data
 edit list of FASTQs to generate commands in the form
  ../../../../T2T_cenSat_hub/bin/encodeAlignJob 4 64 {check out exists bams/$NAME.bam} ../encodeRnaSeq1/tigs/star data/${FASTQ}
  para create -ram=64g -batch=b1  jobs.para 
  para push -ram=64g -batch=b1

  # note: looks like 16gb might do
(nice samtools cat bams/CHM13*.bam | nice samtools sort -T${TMPDIR}/proSeq. -O BAM --threads 32 >bams/proSeq.bam)>&cat.log&

# generate intron calls

#LOOP
../../../../T2T_cenSat_hub/bin/callIntronsJob ../encodeRnaSeq1/tigs/cenSat1 $(path1) introns/$(root1).introns.bigBed {check out exists introns/$(root1).juncs.bigBed}
#ENDLOOP
gensub2 <(find bams -name '*.bam') <(echo 1) introns.tmpl introns.jobs

for f in bams/*.bam ; do (samtools index $f &); done


* 2020-05-30 genbank
** mrnaBlatJob
#!/bin/bash -e
chr=$1
fa=$2
psl=$3
pslTmp=${psl}.$(hostname).$$.tmp
mkdir -p $(dirname $psl)
blat -t=dna -q=rna -noHead -fine -minScore=20 -stepSize=5 \
   -ooc=../../../../../hub/cenSat1/cenSat1.11.ooc \
    ../../../../../hub/cenSat1/cenSat1.2bit:${chr} \
    $fa $pslTmp
mv $pslTmp $psl



** estBlatJob
#!/bin/bash -e
chr=$1
fa=$2
psl=$3
pslTmp=${psl}.$(hostname).$$.tmp
mkdir -p $(dirname $psl)
blat -t=dna -q=rna -noHead \
   -ooc=../../../../../hub/cenSat1/cenSat1.11.ooc \
    ../../../../../hub/cenSat1/cenSat1.2bit:${chr} \
    $fa $pslTmp
mv $pslTmp $psl

** blat.gensub for mrna
#LOOP
../../mrnaBlatJob $(path1) $(path2) {check out exists rawpsl/$(root1).$(root2).psl}
#ENDLOOP
** blat.gensub for est
#LOOP
../../estBlatJob $(path1) $(path2) {check out exists rawpsl/$(root1).$(root2).psl}
#ENDLOOP

** steps
cd hub/cenSat1
blat cenSat1.2bit /dev/null /dev/null -tileSize=11 -makeOoc=cenSat1.11.ooc -repMatch=1024

cd genefind/genbank/tmp

cd mrna
# "Homo sapiens" = 3218
hgsql hgFixed -Ne 'select acc from gbCdnaInfo where organism=3218 and type="mRNA"' >mrna.acc
getRna -inclVer hgFixed mrna.acc mrna.fa &
faSplit about mrna.fa 200000 tmpfa/mrna.
gensub2 ../../../../../hub/cenSat1/cenSat1.seqs <(find tmpfa -type f) blat.gensub mrna.jobs
wc -l mrna.jobs  -> 5791212 mrna.jobs
para shove -maxQueue=20000000 -maxPush=20000000  mrna.jobs -batch=b1 >&mrna.log

cd est
hgsql hgFixed -Ne 'select acc from gbCdnaInfo where organism=3218 and type="EST"' >est.acc
getRna -inclVer hgFixed est.acc est.fa &
faSplit about est.fa 400000 tmpfa/est.
gensub2 ../../../../../hub/cenSat1/cenSat1.seqs <(find tmpfa -type f) blat.gensub est.jobs
para shove -maxQueue=20000000 -maxPush=20000000  est.jobs -batch=b1 >&est.log
# paused this to give mRNAs priority

* TODO: used GM12878 ONT cDNA
* some analysis notes
** from KM, regions with ESTs
  tig00000514:91520119-91789872
  tig00001215:14337883-14629565

** jvb:
  assemble transcripts
  - stringtie
  - https://academic.oup.com/gigascience/article/8/5/giz039/5488105
    Trinity of course
    You might have to pull the fastq sequences out based on whether they align to your centromere.

* 2020-05-22 how to define pericentormere discussion
  q: what is a good way to computations defined the pericentormere regions?
  Karen:
   Biologist answer: you would map H3K9me3 and then mark underlying regions.
   The genomics answer: you would mark all repeat regions that extend until
   you hit “unique/chromosome arms”

   May be time to use new language here too. I think we may have the power to
   do this in our paper. I have been using terms like ct for centromeric
   transition sequences, etc.

  q: how does one know when one hits “unique/chromosome arms”?
  Karen:
     Outside of segmental duplications and satellites enrichment regions..
     Folks characterized these regions in the past, maybe Evan’s work is most
     relevant since he is in the segdup world (and it is the ‘bookend’ before
     reaching the arm): She, Xinwei, et al. “The structure and evolution of
     centromeric transition regions within the human genome.” Nature 430.7002
     (2004): 857-864.
    He may have hg18 coordinates listed here, so one could reference this
    analysis and use liftOver to hg38 as defined/justified path

    we do not have H3K9me3 for CHM13.  We could always map from another
    genome, but that may be ‘apples to oranges’ since these sites are expected
    to evolve.

* ??? ideas for sliding window density of segdups and satellite1 repeats
- bedops
 https://www.biostars.org/p/321655/
  bedops --chop 500000 --stagger 100000 -x <(awk -vOFS="\t" '{ print $1, $2-1, $2; }' scaffolds.txt | sort-bed -) \
   | bedmap --echo --count --delim '\t' - <(vcf2bed < snps.vcf) > answer.bed

search for "sliding window density" programs

* 2020-05-24: Define faux pericentormere regions based regions without multi-exon gencode mappings
cd gencodePeriBookend
../../../../../T2T_cenSat_hub/bin/gencodePeriBookend ../../../../hub/cenSat1/centroRegions.bigBed ../../../../hub/cenSat1/transMap/cenSat1.ensembl.syn.transMapV1.bigPsl stdout| bedSort stdin centroPlus.bed

bedToBigBed centroPlus.bed ../../../../T2T_cenSat/hub/cenSat1/cenSat1.sizes centroPlus.bigBed



# get junctions
bigBedToBed ../encodeRnaSeq1/introns/encodeRnaSeq.juncs.bigBed /dev/stdout  |overlapSelect -inFmt=bed extendCenRegion.bed /dev/stdin juncs.extendCenRegion.bed
bigBedToBed ../encodeRnaSeq1/introns/encodeRnaSeq.juncs.bigBed /dev/stdout  |overlapSelect -inFmt=bed cenRegion.bed /dev/stdin juncs.cenRegion.bed

# for viz review only
tawk '{print $0 >gensub("_.*$",".bed", "g", $4)}' centroPlus.bed 
bedtools merge -s -d 2500 -i juncs.cenRegion.bed | tawk '{$4="cenRegion"NR; print}' > merge2500.cenRegion.bed
bedtools merge -s -d 2500 -i juncs.extendCenRegion.bed | tawk '{$4="extendCenRegion"NR; print}' > merge2500.extendCenRegion.bed
for b in merge*.bed ; do (echo "track name=$(basename $b .bed) visibility=pack" ; cat $b); done >~/public_html/tmp/t2t.ctrack

* 2020-05-27  geneAsmStringtie use stringtie to build models in gencodePeriBookend
cd geneAsmStringtie
# get reads from extendCenRegion
samtools view -b  -L ../gencodePeriBookend/centroPlus.bed ../encodeRnaSeq1/bams/encodeRnaSeq.bam > rnaseq-centroPlus.bam &

# don't do multi-map corrections:
(time nice ../../src/stringtie2-1.3.6/stringtie -u -o rnaseq-centroPlus.st.gtf rnaseq-centroPlus.bam )>&log&

* possible analysis tools
** Blast2GO
** https://omictools.com/reference-based-transcriptome-assembly-category
** https://www.sciencedirect.com/science/article/pii/S0965174815000995
** https://www.nature.com/articles/srep44383
** https://www.biostars.org/p/369570/
** https://link.springer.com/content/pdf/10.1007%2Fs40484-017-0109-2.pdf
- review
** http://www.eurekaselect.com/171526/article
- review
** https://www.hindawi.com/journals/cbj/2014/961823/
hybrid approach
** https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5722698/
scallop
* analysis
** stringtie
- -g 0 -u produces fewer exons without splice evidence
- doesn't pay attention to paired end reads
** tig00008423:147052-215406 20 blocks
- tig00008423:158,276-167,726, big exon with no splice junctions
